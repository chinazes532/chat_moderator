from contextlib import suppress

from aiogram import Router, Bot
from aiogram.exceptions import TelegramBadRequest
from aiogram.types import Message, ChatPermissions
from aiogram.filters import CommandStart, Command, CommandObject

from filters.is_admin import AdminProtect
from filters.chat_type import ChatTypeFilter

from filters.parse_time import parse_time
from filters.admin_chat import admin_chat

import keyboards as kb

from database import (add_warn, get_user,
                      delete_all_warn)

admin = Router()


@admin.message(CommandStart(), ChatTypeFilter(['private']), AdminProtect())
async def start_command(message: Message):
    await message.answer("–í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!\n"
                         "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")


@admin.message(Command('warn'), ChatTypeFilter(['group', 'supergroup']))
async def warn_command(message: Message, bot: Bot):
    if not message.reply_to_message or not await admin_chat(message, bot):
        await message.answer("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        return

    user_id = message.reply_to_message.from_user.id
    user = await get_user(user_id)

    if user is None:
        await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    if user[1] >= 2:
        await add_warn(user_id)
        await bot.restrict_chat_member(
            user_id=user_id,
            chat_id=message.chat.id,
            until_date=None,
            permissions=ChatPermissions(can_send_messages=False)
        )
        await message.reply("–í—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ —á–∞—Ç–µ, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ—Å–∏—Ç—å —Ä–∞–∑–±–∞–Ω —É –∞–¥–º–∏–Ω–∞.",
                             parse_mode='HTML',
                             reply_markup=kb.admin)
    else:
        await add_warn(user_id)
        username = message.reply_to_message.from_user.username or "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        await message.reply(f"@{username} <code>–≤—ã –±—ã–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω—ã.\n"
                            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: {user[1] + 1}/3</code>",
                            parse_mode='HTML')


@admin.message(Command('unwarn'), ChatTypeFilter(['group', 'supergroup']))
async def unwarn_command(message: Message, bot: Bot):
    if message.reply_to_message or not await admin_chat(message, bot):
        await delete_all_warn(message.reply_to_message.from_user.id)
        await message.reply(f"<code>—Å –≤–∞—Å –±—ã–ª–∏ —Å–Ω—è—Ç—ã –≤—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è</code>",
                            parse_mode='HTML')

        await bot.restrict_chat_member(chat_id=message.chat.id,
                                       user_id=message.reply_to_message.from_user.id,
                                       permissions=ChatPermissions(can_send_messages=True,
                                                                   can_send_other_messages=True))
        await message.answer(f" –í—Å–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è  –±—ã–ª–∏ —Å–Ω—è—Ç—ã!")
    else:
        await message.answer("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ")


@admin.message(Command("mute"), ChatTypeFilter(['group', 'supergroup']))
async def func_mute(message: Message, command: CommandObject, bot: Bot):
    reply_message = message.reply_to_message

    if not reply_message or not await admin_chat(message, bot):
        await message.reply("<b>‚ùå  –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!</b>",
                            parse_mode='HTML')
        return

    date = parse_time(command.args)
    mention = reply_message.from_user.mention_html(reply_message.from_user.first_name)

    with suppress(TelegramBadRequest):
        await bot.restrict_chat_member(chat_id=message.chat.id, user_id=reply_message.from_user.id, until_date=date,
                                       permissions=ChatPermissions(can_send_messages=False))
        await message.answer(f"üîá –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>{mention}</b> –±—ã–ª –∑–∞–≥–ª—É—à–µ–Ω!",
                             parse_mode='HTML')


